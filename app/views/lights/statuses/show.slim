- content_for(:title) { t 'views.lights.management' }
section.container
  .row
    .lights_status
      .lights_status_indicator
        - case @lights_status
        - when :on
          span.fa-stack
            i.fa.fa-sun-o.fa-stack-2x
            i.fa.fa-lightbulb-o.fa-stack-1x
          br
          = t('views.lights.on')
        - when :off
          span.fa-stack
            i.fa.fa-circle.fa-stack-2x
            i.fa.fa-lightbulb-o.fa-stack-1x.fa-inverse
          br
          = t('views.lights.off')
        - else
          span.fa-stack
            i.fa.fa-circle.fa-stack-2x
            i.fa.fa-question.fa-stack-1x.fa-inverse
          br
          = t('views.lights.unknown')
        br
        - if @lights_forced_on
          = t('views.lights.policy', policy: t('views.lights.force_on'))
        - else
          = t('views.lights.policy', policy: t('views.lights.auto'))

    .large_button_group
      - unless @lights_forced_on
        = button_to lights_policy_path(lights_policy: {policy: 'force_on'}), class: 'door_button btn-success', method: :patch do
          = icon('toggle-on')
          br
          span.small = t 'views.lights.force_on'
      - else
        = button_to lights_policy_path(lights_policy: {policy: 'auto'}), class: 'door_button btn-info', method: :patch do
          = icon('clock-o')
          br
          span.small = t 'views.lights.auto'
